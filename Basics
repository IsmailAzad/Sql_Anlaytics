use NMS

select * from Orders


--write a sql to get all the orders where customers name has 
--"a" as second character and "d" as fourth character (58 rows)

select *
from Orders
where customer_name like '_a_d%'


--write a sql to get all the orders placed in the 
--month of dec 2020 (352 rows)

select *
from Orders
where order_date between '2020-12-01' and '2020-12-31'

-- write a query to get all the orders where ship_mode 
--is neither in 'Standard Class' nor in 'First Class' 
--and ship_date is after nov 2020 (944 rows)

select *
from Orders
where ship_mode not in ('standard class','first class') and 
ship_date > '2020-11-30'

-- write a query to get all the orders where customer 
--name does not start with "A" but ends with "n" (2222 rows)

select *
from Orders
where customer_name like '[^A]%n'

--write a query to get all the orders 
--where profit is negative (1871 rows)

select * 
from Orders
where profit < 0

-- write a query to get all the orders where either 
--quantity is less than 3 or profit is 0 (3348) 

select * 
from Orders
where quantity < 3 or profit = 0

--your manager handles the sales for South region 
--and he wants you to create a report of all the orders in 
--his region where some discount is provided to the customers (815 rows)

select *
from Orders
where region = 'South' and discount > 0

-- write a query to find top 5 rows with 
--highest sales in furniture category 

select * 
from Orders
where category = 'Furniture'
order by sales desc

--write a query to find all the records in technology and furniture category for the orders 
--placed in the year 2020 only (1021 rows)

select *
from Orders
where Category in ('Furniture','Technology') and
order_date between '2020-01-31' and   '2020-12-31'

--write a query to find all the orders where order date 
--is in year 2020 
--but ship date is in 2021 (33 rows)

select * 
from Orders
where order_date between '2020-01-01' and '2020-12-31'
and ship_date  between '2021-01-01' and '2021-12-31'

--- You have a table of customers where the gender column values are wrongly populated .
 --Write an update statement to swap the gender. 
 --The male should be update to female and female should be updated to male.

 create table  customers 
(
customer_id int,
gender varchar(1)
)

insert into customers values (1,'M') , (2,'F') , (3,'F') , (4,'M')

select * from customers

update customers
set gender= 
case when gender = 'M' then 'F'
      else 'M'
	  
END

select * from customers

update customers 
set gender = case when gender = 'M' then 'F' else 'M'
end
